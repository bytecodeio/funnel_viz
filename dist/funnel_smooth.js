/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["funnel_smooth"] = factory();
	else
		root["funnel_smooth"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/visualizations/css/main.css":
/*!*****************************************!*\
  !*** ./src/visualizations/css/main.css ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".svg-funnel-js {\\n    display: inline-block;\\n    position: relative; }\\n    .svg-funnel-js svg {\\n      display: block; }\\n    .svg-funnel-js .svg-funnel-js__labels {\\n      position: absolute;\\n      display: flex;\\n      width: 100%;\\n      height: 100%;\\n      top: 0;\\n      left: 0; }\\n    .svg-funnel-js.svg-funnel-js--vertical .svg-funnel-js__labels {\\n      flex-direction: column; }\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/visualizations/css/main.css?");

/***/ }),

/***/ "./src/visualizations/css/themes.css":
/*!*******************************************!*\
  !*** ./src/visualizations/css/themes.css ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(false);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,700);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale; }\\n\\n.svg-funnel-js {\\n  font-family: \\\"Open Sans\\\", sans-serif; }\\n  .svg-funnel-js .svg-funnel-js__container {\\n    width: 100%;\\n    height: 100%; }\\n  .svg-funnel-js .svg-funnel-js__labels {\\n    width: 100%;\\n    box-sizing: border-box; }\\n    .svg-funnel-js .svg-funnel-js__labels .svg-funnel-js__label {\\n      flex: 1 1 0;\\n      position: relative; }\\n      .svg-funnel-js .svg-funnel-js__labels .svg-funnel-js__label .label__value {\\n        font-size: 24px;\\n        color: #fff;\\n        line-height: 18px;\\n        margin-bottom: 6px; }\\n      .svg-funnel-js .svg-funnel-js__labels .svg-funnel-js__label .label__title {\\n        font-size: 12px;\\n        font-weight: bold;\\n        color: #21ffa2; }\\n      .svg-funnel-js .svg-funnel-js__labels .svg-funnel-js__label .label__percentage {\\n        font-size: 16px;\\n        font-weight: bold;\\n        color: #9896dc; }\\n      .svg-funnel-js .svg-funnel-js__labels .svg-funnel-js__label .label__segment-percentages {\\n        position: absolute;\\n        top: 50%;\\n        transform: translateY(-50%);\\n        width: 100%;\\n        left: 0;\\n        padding: 8px 24px;\\n        box-sizing: border-box;\\n        background-color: rgba(8, 7, 48, 0.8);\\n        margin-top: 24px;\\n        opacity: 0;\\n        transition: opacity 0.1s ease;\\n        cursor: default; }\\n        .svg-funnel-js .svg-funnel-js__labels .svg-funnel-js__label .label__segment-percentages ul {\\n          margin: 0;\\n          padding: 0;\\n          list-style-type: none; }\\n          .svg-funnel-js .svg-funnel-js__labels .svg-funnel-js__label .label__segment-percentages ul li {\\n            font-size: 13px;\\n            line-height: 16px;\\n            color: #fff;\\n            margin: 18px 0; }\\n            .svg-funnel-js .svg-funnel-js__labels .svg-funnel-js__label .label__segment-percentages ul li .percentage__list-label {\\n              font-weight: bold;\\n              color: #05df9d; }\\n      .svg-funnel-js .svg-funnel-js__labels .svg-funnel-js__label:hover .label__segment-percentages {\\n        opacity: 1; }\\n  .svg-funnel-js:not(.svg-funnel-js--vertical) {\\n    padding-top: 64px;\\n    padding-bottom: 16px; }\\n    .svg-funnel-js:not(.svg-funnel-js--vertical) .svg-funnel-js__label {\\n      padding-left: 24px; }\\n      .svg-funnel-js:not(.svg-funnel-js--vertical) .svg-funnel-js__label:not(:first-child) {\\n        border-left: 1px solid #9896dc; }\\n  .svg-funnel-js.svg-funnel-js--vertical {\\n    padding-left: 120px;\\n    padding-right: 16px; }\\n    .svg-funnel-js.svg-funnel-js--vertical .svg-funnel-js__label {\\n      padding-top: 24px; }\\n      .svg-funnel-js.svg-funnel-js--vertical .svg-funnel-js__label:not(:first-child) {\\n        border-top: 1px solid #9896dc; }\\n      .svg-funnel-js.svg-funnel-js--vertical .svg-funnel-js__label .label__segment-percentages {\\n        margin-top: 0;\\n        margin-left: 106px;\\n        width: calc(100% - 106px); }\\n        .svg-funnel-js.svg-funnel-js--vertical .svg-funnel-js__label .label__segment-percentages .segment-percentage__list {\\n          display: flex;\\n          justify-content: space-around; }\\n  .svg-funnel-js .svg-funnel-js__subLabels {\\n    display: flex;\\n    justify-content: center;\\n    margin-top: 24px;\\n    position: absolute;\\n    width: 100%;\\n    left: 0; }\\n    .svg-funnel-js .svg-funnel-js__subLabels .svg-funnel-js__subLabel {\\n      display: flex;\\n      font-size: 12px;\\n      color: #fff;\\n      line-height: 16px; }\\n      .svg-funnel-js .svg-funnel-js__subLabels .svg-funnel-js__subLabel:not(:first-child) {\\n        margin-left: 16px; }\\n      .svg-funnel-js .svg-funnel-js__subLabels .svg-funnel-js__subLabel .svg-funnel-js__subLabel--color {\\n        width: 12px;\\n        height: 12px;\\n        border-radius: 50%;\\n        margin: 2px 8px 2px 0; }\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/visualizations/css/themes.css?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/funnel-graph-js/index.js":
/*!***********************************************!*\
  !*** ./node_modules/funnel-graph-js/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./src/js/main */ \"./node_modules/funnel-graph-js/src/js/main.js\")[\"default\"];\n\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/funnel-graph-js/index.js?");

/***/ }),

/***/ "./node_modules/funnel-graph-js/src/js/graph.js":
/*!******************************************************!*\
  !*** ./node_modules/funnel-graph-js/src/js/graph.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateLegendBackground\": () => (/* binding */ generateLegendBackground),\n/* harmony export */   \"getDefaultColors\": () => (/* binding */ getDefaultColors),\n/* harmony export */   \"areEqual\": () => (/* binding */ areEqual),\n/* harmony export */   \"createSVGElement\": () => (/* binding */ createSVGElement),\n/* harmony export */   \"setAttrs\": () => (/* binding */ setAttrs),\n/* harmony export */   \"removeAttrs\": () => (/* binding */ removeAttrs),\n/* harmony export */   \"defaultColors\": () => (/* binding */ defaultColors)\n/* harmony export */ });\nconst setAttrs = (element, attributes) => {\n    if (typeof attributes === 'object') {\n        Object.keys(attributes).forEach((key) => {\n            element.setAttribute(key, attributes[key]);\n        });\n    }\n};\n\nconst removeAttrs = (element, ...attributes) => {\n    attributes.forEach((attribute) => {\n        element.removeAttribute(attribute);\n    });\n};\n\nconst createSVGElement = (element, container, attributes) => {\n    const el = document.createElementNS('http://www.w3.org/2000/svg', element);\n\n    if (typeof attributes === 'object') {\n        setAttrs(el, attributes);\n    }\n\n    if (typeof container !== 'undefined') {\n        container.appendChild(el);\n    }\n\n    return el;\n};\n\nconst generateLegendBackground = (color, direction = 'horizontal') => {\n    if (typeof color === 'string') {\n        return `background-color: ${color}`;\n    }\n\n    if (color.length === 1) {\n        return `background-color: ${color[0]}`;\n    }\n\n    return `background-image: linear-gradient(${direction === 'horizontal'\n        ? 'to right, '\n        : ''}${color.join(', ')})`;\n};\n\nconst defaultColors = ['#FF4589', '#FF5050',\n    '#05DF9D', '#4FF2FD',\n    '#2D9CDB', '#A0BBFF',\n    '#FFD76F', '#F2C94C',\n    '#FF9A9A', '#FFB178'];\n\nconst getDefaultColors = (number) => {\n    const colors = [...defaultColors];\n    const colorSet = [];\n\n    for (let i = 0; i < number; i++) {\n        // get a random color\n        const index = Math.abs(Math.round(Math.random() * (colors.length - 1)));\n        // push it to the list\n        colorSet.push(colors[index]);\n        // and remove it, so that it is not chosen again\n        colors.splice(index, 1);\n    }\n    return colorSet;\n};\n\n/*\n    Used in comparing existing values to value provided on update\n    It is limited to comparing arrays on purpose\n    Name is slightly unusual, in order not to be confused with Lodash method\n */\nconst areEqual = (value, newValue) => {\n    // If values are not of the same type\n    const type = Object.prototype.toString.call(value);\n    if (type !== Object.prototype.toString.call(newValue)) return false;\n    if (type !== '[object Array]') return false;\n\n    if (value.length !== newValue.length) return false;\n\n    for (let i = 0; i < value.length; i++) {\n        // if the it's a two dimensional array\n        const currentType = Object.prototype.toString.call(value[i]);\n        if (currentType !== Object.prototype.toString.call(newValue[i])) return false;\n        if (currentType === '[object Array]') {\n            // if row lengths are not equal then arrays are not equal\n            if (value[i].length !== newValue[i].length) return false;\n            // compare each element in the row\n            for (let j = 0; j < value[i].length; j++) {\n                if (value[i][j] !== newValue[i][j]) {\n                    return false;\n                }\n            }\n        } else if (value[i] !== newValue[i]) {\n            // if it's a one dimensional array element\n            return false;\n        }\n    }\n\n    return true;\n};\n\n\n\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/funnel-graph-js/src/js/graph.js?");

/***/ }),

/***/ "./node_modules/funnel-graph-js/src/js/main.js":
/*!*****************************************************!*\
  !*** ./node_modules/funnel-graph-js/src/js/main.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ \"./node_modules/funnel-graph-js/src/js/number.js\");\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path */ \"./node_modules/funnel-graph-js/src/js/path.js\");\n/* harmony import */ var _graph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./graph */ \"./node_modules/funnel-graph-js/src/js/graph.js\");\n/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./random */ \"./node_modules/funnel-graph-js/src/js/random.js\");\n/* eslint-disable no-trailing-spaces */\n/* global HTMLElement */\n\n\n\n\n\nclass FunnelGraph {\n    constructor(options) {\n        this.containerSelector = options.container;\n        this.gradientDirection = (options.gradientDirection && options.gradientDirection === 'vertical')\n            ? 'vertical'\n            : 'horizontal';\n        this.direction = (options.direction && options.direction === 'vertical') ? 'vertical' : 'horizontal';\n        this.labels = FunnelGraph.getLabels(options);\n        this.subLabels = FunnelGraph.getSubLabels(options);\n        this.values = FunnelGraph.getValues(options);\n        this.percentages = this.createPercentages();\n        this.colors = options.data.colors || (0,_graph__WEBPACK_IMPORTED_MODULE_2__.getDefaultColors)(this.is2d() ? this.getSubDataSize() : 2);\n        this.displayPercent = options.displayPercent || false;\n        this.data = options.data;\n        this.height = options.height;\n        this.width = options.width;\n        this.subLabelValue = options.subLabelValue || 'percent';\n    }\n\n    /**\n    An example of a two-dimensional funnel graph\n    #0..................\n                       ...#1................\n                                           ......\n    #0********************#1**                    #2.........................#3 (A)\n                              *******************\n                                                  #2*************************#3 (B)\n                                                  #2+++++++++++++++++++++++++#3 (C)\n                              +++++++++++++++++++\n    #0++++++++++++++++++++#1++                    #2-------------------------#3 (D)\n                                           ------\n                       ---#1----------------\n    #0-----------------\n     Main axis is the primary axis of the graph.\n     In a horizontal graph it's the X axis, and Y is the cross axis.\n     However we use the names \"main\" and \"cross\" axis,\n     because in a vertical graph the primary axis is the Y axis\n     and the cross axis is the X axis.\n     First step of drawing the funnel graph is getting the coordinates of points,\n     that are used when drawing the paths.\n     There are 4 paths in the example above: A, B, C and D.\n     Such funnel has 3 labels and 3 subLabels.\n     This means that the main axis has 4 points (number of labels + 1)\n     One the ASCII illustrated graph above, those points are illustrated with a # symbol.\n    */\n    getMainAxisPoints() {\n        const size = this.getDataSize();\n        const points = [];\n        const fullDimension = this.isVertical() ? this.getHeight() : this.getWidth();\n        for (let i = 0; i <= size; i++) {\n            points.push((0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)(fullDimension * i / size));\n        }\n        return points;\n    }\n\n    getCrossAxisPoints() {\n        const points = [];\n        const fullDimension = this.getFullDimension();\n        // get half of the graph container height or width, since funnel shape is symmetric\n        // we use this when calculating the \"A\" shape\n        const dimension = fullDimension / 2;\n        if (this.is2d()) {\n            const totalValues = this.getValues2d();\n            const max = Math.max(...totalValues);\n\n            // duplicate last value\n            totalValues.push([...totalValues].pop());\n            // get points for path \"A\"\n            points.push(totalValues.map(value => (0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)((max - value) / max * dimension)));\n            // percentages with duplicated last value\n            const percentagesFull = this.getPercentages2d();\n            const pointsOfFirstPath = points[0];\n\n            for (let i = 1; i < this.getSubDataSize(); i++) {\n                const p = points[i - 1];\n                const newPoints = [];\n\n                for (let j = 0; j < this.getDataSize(); j++) {\n                    newPoints.push((0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)(\n                        // eslint-disable-next-line comma-dangle\n                        p[j] + (fullDimension - pointsOfFirstPath[j] * 2) * (percentagesFull[j][i - 1] / 100)\n                    ));\n                }\n\n                // duplicate the last value as points #2 and #3 have the same value on the cross axis\n                newPoints.push([...newPoints].pop());\n                points.push(newPoints);\n            }\n\n            // add points for path \"D\", that is simply the \"inverted\" path \"A\"\n            points.push(pointsOfFirstPath.map(point => fullDimension - point));\n        } else {\n            // As you can see on the visualization above points #2 and #3 have the same cross axis coordinate\n            // so we duplicate the last value\n            const max = Math.max(...this.values);\n            const values = [...this.values].concat([...this.values].pop());\n            // if the graph is simple (not two-dimensional) then we have only paths \"A\" and \"D\"\n            // which are symmetric. So we get the points for \"A\" and then get points for \"D\" by subtracting \"A\"\n            // points from graph cross dimension length\n            points.push(values.map(value => (0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)((max - value) / max * dimension)));\n            points.push(points[0].map(point => fullDimension - point));\n        }\n\n        return points;\n    }\n\n    getGraphType() {\n        return this.values && this.values[0] instanceof Array ? '2d' : 'normal';\n    }\n\n    is2d() {\n        return this.getGraphType() === '2d';\n    }\n\n    isVertical() {\n        return this.direction === 'vertical';\n    }\n\n    getDataSize() {\n        return this.values.length;\n    }\n\n    getSubDataSize() {\n        return this.values[0].length;\n    }\n\n    getFullDimension() {\n        return this.isVertical() ? this.getWidth() : this.getHeight();\n    }\n\n    static getSubLabels(options) {\n        if (!options.data) {\n            throw new Error('Data is missing');\n        }\n\n        const { data } = options;\n\n        if (typeof data.subLabels === 'undefined') return [];\n\n        return data.subLabels;\n    }\n\n    static getLabels(options) {\n        if (!options.data) {\n            throw new Error('Data is missing');\n        }\n\n        const { data } = options;\n\n        if (typeof data.labels === 'undefined') return [];\n\n        return data.labels;\n    }\n\n    addLabels() {\n        const holder = document.createElement('div');\n        holder.setAttribute('class', 'svg-funnel-js__labels');\n\n        this.percentages.forEach((percentage, index) => {\n            const labelElement = document.createElement('div');\n            labelElement.setAttribute('class', `svg-funnel-js__label label-${index + 1}`);\n\n            const title = document.createElement('div');\n            title.setAttribute('class', 'label__title');\n            title.textContent = this.labels[index] || '';\n\n            const value = document.createElement('div');\n            value.setAttribute('class', 'label__value');\n\n            const valueNumber = this.is2d() ? this.getValues2d()[index] : this.values[index];\n            value.textContent = (0,_number__WEBPACK_IMPORTED_MODULE_0__.formatNumber)(valueNumber);\n\n            const percentageValue = document.createElement('div');\n            percentageValue.setAttribute('class', 'label__percentage');\n            percentageValue.textContent = `${percentage.toString()}%`;\n\n            labelElement.appendChild(value);\n            labelElement.appendChild(title);\n            if (this.displayPercent) {\n                labelElement.appendChild(percentageValue);\n            }\n\n            if (this.is2d()) {\n                const segmentPercentages = document.createElement('div');\n                segmentPercentages.setAttribute('class', 'label__segment-percentages');\n                let percentageList = '<ul class=\"segment-percentage__list\">';\n\n                const twoDimPercentages = this.getPercentages2d();\n\n                this.subLabels.forEach((subLabel, j) => {\n                    const subLabelDisplayValue = this.subLabelValue === 'percent'\n                        ? `${twoDimPercentages[index][j]}%`\n                        : (0,_number__WEBPACK_IMPORTED_MODULE_0__.formatNumber)(this.values[index][j]);\n                    percentageList += `<li>${this.subLabels[j]}:\n    <span class=\"percentage__list-label\">${subLabelDisplayValue}</span>\n </li>`;\n                });\n                percentageList += '</ul>';\n                segmentPercentages.innerHTML = percentageList;\n                labelElement.appendChild(segmentPercentages);\n            }\n\n            holder.appendChild(labelElement);\n        });\n\n        this.container.appendChild(holder);\n    }\n\n    addSubLabels() {\n        if (this.subLabels) {\n            const subLabelsHolder = document.createElement('div');\n            subLabelsHolder.setAttribute('class', 'svg-funnel-js__subLabels');\n\n            let subLabelsHTML = '';\n\n            this.subLabels.forEach((subLabel, index) => {\n                subLabelsHTML += `<div class=\"svg-funnel-js__subLabel svg-funnel-js__subLabel-${index + 1}\">\n    <div class=\"svg-funnel-js__subLabel--color\"\n        style=\"${(0,_graph__WEBPACK_IMPORTED_MODULE_2__.generateLegendBackground)(this.colors[index], this.gradientDirection)}\"></div>\n    <div class=\"svg-funnel-js__subLabel--title\">${subLabel}</div>\n</div>`;\n            });\n\n            subLabelsHolder.innerHTML = subLabelsHTML;\n            this.container.appendChild(subLabelsHolder);\n        }\n    }\n\n    createContainer() {\n        if (!this.containerSelector) {\n            throw new Error('Container is missing');\n        }\n\n        if (typeof this.containerSelector === 'string') {\n            this.container = document.querySelector(this.containerSelector);\n            if (!this.container) {\n                throw new Error(`Container cannot be found (selector: ${this.containerSelector}).`);\n            }\n        } else if (this.container instanceof HTMLElement) {\n            this.container = this.containerSelector;\n        } else {\n            throw new Error('Container must either be a selector string or an HTMLElement.');\n        }\n\n        this.container.classList.add('svg-funnel-js');\n\n        this.graphContainer = document.createElement('div');\n        this.graphContainer.classList.add('svg-funnel-js__container');\n        this.container.appendChild(this.graphContainer);\n\n        if (this.direction === 'vertical') {\n            this.container.classList.add('svg-funnel-js--vertical');\n        }\n    }\n\n    setValues(v) {\n        this.values = v;\n        return this;\n    }\n\n    setDirection(d) {\n        this.direction = d;\n        return this;\n    }\n\n    setHeight(h) {\n        this.height = h;\n        return this;\n    }\n\n    setWidth(w) {\n        this.width = w;\n        return this;\n    }\n\n    static getValues(options) {\n        if (!options.data) {\n            return [];\n        }\n\n        const { data } = options;\n\n        if (typeof data === 'object') {\n            return data.values;\n        }\n\n        return [];\n    }\n\n    getValues2d() {\n        const values = [];\n\n        this.values.forEach((valueSet) => {\n            values.push(valueSet.reduce((sum, value) => sum + value, 0));\n        });\n\n        return values;\n    }\n\n    getPercentages2d() {\n        const percentages = [];\n\n        this.values.forEach((valueSet) => {\n            const total = valueSet.reduce((sum, value) => sum + value, 0);\n            percentages.push(valueSet.map(value => (total === 0 ? 0 : (0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)(value * 100 / total))));\n        });\n\n        return percentages;\n    }\n\n    createPercentages() {\n        let values = [];\n\n        if (this.is2d()) {\n            values = this.getValues2d();\n        } else {\n            values = [...this.values];\n        }\n\n        const max = Math.max(...values);\n        return values.map(value => (value === 0 ? 0 : (0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)(value * 100 / max)));\n    }\n\n    applyGradient(svg, path, colors, index) {\n        const defs = (svg.querySelector('defs') === null)\n            ? (0,_graph__WEBPACK_IMPORTED_MODULE_2__.createSVGElement)('defs', svg)\n            : svg.querySelector('defs');\n\n        const gradientName = (0,_random__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(`funnelGradient-${index}-`);\n\n        const gradient = (0,_graph__WEBPACK_IMPORTED_MODULE_2__.createSVGElement)('linearGradient', defs, {\n            id: gradientName\n        });\n\n        if (this.gradientDirection === 'vertical') {\n            (0,_graph__WEBPACK_IMPORTED_MODULE_2__.setAttrs)(gradient, {\n                x1: '0',\n                x2: '0',\n                y1: '0',\n                y2: '1'\n            });\n        }\n\n        const numberOfColors = colors.length;\n\n        for (let i = 0; i < numberOfColors; i++) {\n            (0,_graph__WEBPACK_IMPORTED_MODULE_2__.createSVGElement)('stop', gradient, {\n                'stop-color': colors[i],\n                offset: `${Math.round(100 * i / (numberOfColors - 1))}%`\n            });\n        }\n\n        (0,_graph__WEBPACK_IMPORTED_MODULE_2__.setAttrs)(path, {\n            fill: `url(\"#${gradientName}\")`,\n            stroke: `url(\"#${gradientName}\")`\n        });\n    }\n\n    makeSVG() {\n        const svg = (0,_graph__WEBPACK_IMPORTED_MODULE_2__.createSVGElement)('svg', this.graphContainer, {\n            width: this.getWidth(),\n            height: this.getHeight()\n        });\n\n        const valuesNum = this.getCrossAxisPoints().length - 1;\n        for (let i = 0; i < valuesNum; i++) {\n            const path = (0,_graph__WEBPACK_IMPORTED_MODULE_2__.createSVGElement)('path', svg);\n\n            const color = (this.is2d()) ? this.colors[i] : this.colors;\n            const fillMode = (typeof color === 'string' || color.length === 1) ? 'solid' : 'gradient';\n\n            if (fillMode === 'solid') {\n                (0,_graph__WEBPACK_IMPORTED_MODULE_2__.setAttrs)(path, {\n                    fill: color,\n                    stroke: color\n                });\n            } else if (fillMode === 'gradient') {\n                this.applyGradient(svg, path, color, i + 1);\n            }\n\n            svg.appendChild(path);\n        }\n\n        this.graphContainer.appendChild(svg);\n    }\n\n    getSVG() {\n        const svg = this.container.querySelector('svg');\n\n        if (!svg) {\n            throw new Error('No SVG found inside of the container');\n        }\n\n        return svg;\n    }\n\n    getWidth() {\n        return this.width || this.graphContainer.clientWidth;\n    }\n\n    getHeight() {\n        return this.height || this.graphContainer.clientHeight;\n    }\n\n    getPathDefinitions() {\n        const valuesNum = this.getCrossAxisPoints().length - 1;\n        const paths = [];\n        for (let i = 0; i < valuesNum; i++) {\n            if (this.isVertical()) {\n                const X = this.getCrossAxisPoints()[i];\n                const XNext = this.getCrossAxisPoints()[i + 1];\n                const Y = this.getMainAxisPoints();\n\n                const d = (0,_path__WEBPACK_IMPORTED_MODULE_1__.createVerticalPath)(i, X, XNext, Y);\n                paths.push(d);\n            } else {\n                const X = this.getMainAxisPoints();\n                const Y = this.getCrossAxisPoints()[i];\n                const YNext = this.getCrossAxisPoints()[i + 1];\n\n                const d = (0,_path__WEBPACK_IMPORTED_MODULE_1__.createPath)(i, X, Y, YNext);\n                paths.push(d);\n            }\n        }\n\n        return paths;\n    }\n\n    getPathMedian(i) {\n        if (this.isVertical()) {\n            const cross = this.getCrossAxisPoints()[i];\n            const next = this.getCrossAxisPoints()[i + 1];\n            const Y = this.getMainAxisPoints();\n            const X = [];\n            const XNext = [];\n\n            cross.forEach((point, index) => {\n                const m = (point + next[index]) / 2;\n                X.push(m - 1);\n                XNext.push(m + 1);\n            });\n\n            return (0,_path__WEBPACK_IMPORTED_MODULE_1__.createVerticalPath)(i, X, XNext, Y);\n        }\n\n        const X = this.getMainAxisPoints();\n        const cross = this.getCrossAxisPoints()[i];\n        const next = this.getCrossAxisPoints()[i + 1];\n        const Y = [];\n        const YNext = [];\n\n        cross.forEach((point, index) => {\n            const m = (point + next[index]) / 2;\n            Y.push(m - 1);\n            YNext.push(m + 1);\n        });\n\n        return (0,_path__WEBPACK_IMPORTED_MODULE_1__.createPath)(i, X, Y, YNext);\n    }\n\n    drawPaths() {\n        const svg = this.getSVG();\n        const paths = svg.querySelectorAll('path');\n        const definitions = this.getPathDefinitions();\n\n        definitions.forEach((definition, index) => {\n            paths[index].setAttribute('d', definition);\n        });\n    }\n\n    draw() {\n        this.createContainer();\n        this.makeSVG();\n\n        this.addLabels();\n\n        if (this.is2d()) {\n            this.addSubLabels();\n        }\n\n        this.drawPaths();\n    }\n\n    /*\n        Methods\n     */\n\n    makeVertical() {\n        if (this.direction === 'vertical') return true;\n\n        this.direction = 'vertical';\n        this.container.classList.add('svg-funnel-js--vertical');\n\n        const svg = this.getSVG();\n        const height = this.getHeight();\n        const width = this.getWidth();\n        (0,_graph__WEBPACK_IMPORTED_MODULE_2__.setAttrs)(svg, { height, width });\n\n        this.drawPaths();\n\n        return true;\n    }\n\n    makeHorizontal() {\n        if (this.direction === 'horizontal') return true;\n\n        this.direction = 'horizontal';\n        this.container.classList.remove('svg-funnel-js--vertical');\n\n        const svg = this.getSVG();\n        const height = this.getHeight();\n        const width = this.getWidth();\n        (0,_graph__WEBPACK_IMPORTED_MODULE_2__.setAttrs)(svg, { height, width });\n\n        this.drawPaths();\n\n        return true;\n    }\n\n    toggleDirection() {\n        if (this.direction === 'horizontal') {\n            this.makeVertical();\n        } else {\n            this.makeHorizontal();\n        }\n    }\n\n    gradientMakeVertical() {\n        if (this.gradientDirection === 'vertical') return true;\n\n        this.gradientDirection = 'vertical';\n        const gradients = this.graphContainer.querySelectorAll('linearGradient');\n\n        for (let i = 0; i < gradients.length; i++) {\n            (0,_graph__WEBPACK_IMPORTED_MODULE_2__.setAttrs)(gradients[i], {\n                x1: '0',\n                x2: '0',\n                y1: '0',\n                y2: '1'\n            });\n        }\n\n        return true;\n    }\n\n    gradientMakeHorizontal() {\n        if (this.gradientDirection === 'horizontal') return true;\n\n        this.gradientDirection = 'horizontal';\n        const gradients = this.graphContainer.querySelectorAll('linearGradient');\n\n        for (let i = 0; i < gradients.length; i++) {\n            (0,_graph__WEBPACK_IMPORTED_MODULE_2__.removeAttrs)(gradients[i], 'x1', 'x2', 'y1', 'y2');\n        }\n\n        return true;\n    }\n\n    gradientToggleDirection() {\n        if (this.gradientDirection === 'horizontal') {\n            this.gradientMakeVertical();\n        } else {\n            this.gradientMakeHorizontal();\n        }\n    }\n\n    updateWidth(w) {\n        this.width = w;\n        const svg = this.getSVG();\n        const width = this.getWidth();\n        (0,_graph__WEBPACK_IMPORTED_MODULE_2__.setAttrs)(svg, { width });\n\n        this.drawPaths();\n\n        return true;\n    }\n\n    updateHeight(h) {\n        this.height = h;\n        const svg = this.getSVG();\n        const height = this.getHeight();\n        (0,_graph__WEBPACK_IMPORTED_MODULE_2__.setAttrs)(svg, { height });\n\n        this.drawPaths();\n\n        return true;\n    }\n\n    // @TODO: refactor data update\n    updateData(d) {\n        const labels = this.container.querySelector('.svg-funnel-js__labels');\n        const subLabels = this.container.querySelector('.svg-funnel-js__subLabels');\n\n        if (labels) labels.remove();\n        if (subLabels) subLabels.remove();\n\n        this.labels = [];\n        this.colors = (0,_graph__WEBPACK_IMPORTED_MODULE_2__.getDefaultColors)(this.is2d() ? this.getSubDataSize() : 2);\n        this.values = [];\n        this.percentages = [];\n\n        if (typeof d.labels !== 'undefined') {\n            this.labels = FunnelGraph.getLabels({ data: d });\n        }\n        if (typeof d.colors !== 'undefined') {\n            this.colors = d.colors || (0,_graph__WEBPACK_IMPORTED_MODULE_2__.getDefaultColors)(this.is2d() ? this.getSubDataSize() : 2);\n        }\n        if (typeof d.values !== 'undefined') {\n            if (Object.prototype.toString.call(d.values[0]) !== Object.prototype.toString.call(this.values[0])) {\n                this.container.querySelector('svg').remove();\n                this.values = FunnelGraph.getValues({ data: d });\n                this.makeSVG();\n            } else {\n                this.values = FunnelGraph.getValues({ data: d });\n            }\n            this.drawPaths();\n        }\n        this.percentages = this.createPercentages();\n\n        this.addLabels();\n\n        if (typeof d.subLabels !== 'undefined') {\n            this.subLabels = FunnelGraph.getSubLabels({ data: d });\n            this.addSubLabels();\n        }\n    }\n\n    update(o) {\n        if (typeof o.displayPercent !== 'undefined') {\n            if (this.displayPercent !== o.displayPercent) {\n                if (this.displayPercent === true) {\n                    this.container.querySelectorAll('.label__percentage').forEach((label) => {\n                        label.remove();\n                    });\n                } else {\n                    this.container.querySelectorAll('.svg-funnel-js__label').forEach((label, index) => {\n                        const percentage = this.percentages[index];\n                        const percentageValue = document.createElement('div');\n                        percentageValue.setAttribute('class', 'label__percentage');\n\n                        if (percentage !== 100) {\n                            percentageValue.textContent = `${percentage.toString()}%`;\n                            label.appendChild(percentageValue);\n                        }\n                    });\n                }\n            }\n        }\n        if (typeof o.height !== 'undefined') {\n            this.updateHeight(o.height);\n        }\n        if (typeof o.width !== 'undefined') {\n            this.updateWidth(o.width);\n        }\n        if (typeof o.gradientDirection !== 'undefined') {\n            if (o.gradientDirection === 'vertical') {\n                this.gradientMakeVertical();\n            } else if (o.gradientDirection === 'horizontal') {\n                this.gradientMakeHorizontal();\n            }\n        }\n        if (typeof o.direction !== 'undefined') {\n            if (o.direction === 'vertical') {\n                this.makeVertical();\n            } else if (o.direction === 'horizontal') {\n                this.makeHorizontal();\n            }\n        }\n        if (typeof o.data !== 'undefined') {\n            this.updateData(o.data);\n        }\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FunnelGraph);\n\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/funnel-graph-js/src/js/main.js?");

/***/ }),

/***/ "./node_modules/funnel-graph-js/src/js/number.js":
/*!*******************************************************!*\
  !*** ./node_modules/funnel-graph-js/src/js/number.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"roundPoint\": () => (/* binding */ roundPoint),\n/* harmony export */   \"formatNumber\": () => (/* binding */ formatNumber)\n/* harmony export */ });\nconst roundPoint = number => Math.round(number * 10) / 10;\nconst formatNumber = number => Number(number).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n\n\n\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/funnel-graph-js/src/js/number.js?");

/***/ }),

/***/ "./node_modules/funnel-graph-js/src/js/path.js":
/*!*****************************************************!*\
  !*** ./node_modules/funnel-graph-js/src/js/path.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCurves\": () => (/* binding */ createCurves),\n/* harmony export */   \"createVerticalCurves\": () => (/* binding */ createVerticalCurves),\n/* harmony export */   \"createPath\": () => (/* binding */ createPath),\n/* harmony export */   \"createVerticalPath\": () => (/* binding */ createVerticalPath)\n/* harmony export */ });\n/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number */ \"./node_modules/funnel-graph-js/src/js/number.js\");\n\n\nconst createCurves = (x1, y1, x2, y2) => ` C${(0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)((x2 + x1) / 2)},${y1} `\n    + `${(0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)((x2 + x1) / 2)},${y2} ${x2},${y2}`;\n\nconst createVerticalCurves = (x1, y1, x2, y2) => ` C${x1},${(0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)((y2 + y1) / 2)} `\n    + `${x2},${(0,_number__WEBPACK_IMPORTED_MODULE_0__.roundPoint)((y2 + y1) / 2)} ${x2},${y2}`;\n\n/*\n    A funnel segment is draw in a clockwise direction.\n    Path 1-2 is drawn,\n    then connected with a straight vertical line 2-3,\n    then a line 3-4 is draw (using YNext points going in backwards direction)\n    then path is closed (connected with the starting point 1).\n\n    1---------->2\n    ^           |\n    |           v\n    4<----------3\n\n    On the graph on line 20 it works like this:\n    A#0, A#1, A#2, A#3, B#3, B#2, B#1, B#0, close the path.\n\n    Points for path \"B\" are passed as the YNext param.\n */\n\nconst createPath = (index, X, Y, YNext) => {\n    let str = `M${X[0]},${Y[0]}`;\n\n    for (let i = 0; i < X.length - 1; i++) {\n        str += createCurves(X[i], Y[i], X[i + 1], Y[i + 1]);\n    }\n\n    str += ` L${[...X].pop()},${[...YNext].pop()}`;\n\n    for (let i = X.length - 1; i > 0; i--) {\n        str += createCurves(X[i], YNext[i], X[i - 1], YNext[i - 1]);\n    }\n\n    str += ' Z';\n\n    return str;\n};\n\n/*\n    In a vertical path we go counter-clockwise\n\n    1<----------4\n    |           ^\n    v           |\n    2---------->3\n */\n\nconst createVerticalPath = (index, X, XNext, Y) => {\n    let str = `M${X[0]},${Y[0]}`;\n\n    for (let i = 0; i < X.length - 1; i++) {\n        str += createVerticalCurves(X[i], Y[i], X[i + 1], Y[i + 1]);\n    }\n\n    str += ` L${[...XNext].pop()},${[...Y].pop()}`;\n\n    for (let i = X.length - 1; i > 0; i--) {\n        str += createVerticalCurves(XNext[i], Y[i], XNext[i - 1], Y[i - 1]);\n    }\n\n    str += ' Z';\n\n    return str;\n};\n\n\n\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/funnel-graph-js/src/js/path.js?");

/***/ }),

/***/ "./node_modules/funnel-graph-js/src/js/random.js":
/*!*******************************************************!*\
  !*** ./node_modules/funnel-graph-js/src/js/random.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst generateRandomIdString = prefix => Math.random().toString(36).replace('0.', prefix || '');\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (generateRandomIdString);\n\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/funnel-graph-js/src/js/random.js?");

/***/ }),

/***/ "./src/common/utils.ts":
/*!*****************************!*\
  !*** ./src/common/utils.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.handleErrors = void 0;\nconst handleErrors = (vis, res, options) => {\n    const check = (group, noun, count, min, max) => {\n        if (!vis.addError || !vis.clearErrors)\n            return false;\n        if (count < min) {\n            vis.addError({\n                title: `Not Enough ${noun}s`,\n                message: `This visualization requires ${min === max ? 'exactly' : 'at least'} ${min} ${noun.toLowerCase()}${min === 1 ? '' : 's'}.`,\n                group\n            });\n            return false;\n        }\n        if (count > max) {\n            vis.addError({\n                title: `Too Many ${noun}s`,\n                message: `This visualization requires ${min === max ? 'exactly' : 'no more than'} ${max} ${noun.toLowerCase()}${min === 1 ? '' : 's'}.`,\n                group\n            });\n            return false;\n        }\n        vis.clearErrors(group);\n        return true;\n    };\n    const { pivots, dimensions, measure_like: measures } = res.fields;\n    return (check('pivot-req', 'Pivot', pivots.length, options.min_pivots, options.max_pivots)\n        && check('dim-req', 'Dimension', dimensions.length, options.min_dimensions, options.max_dimensions)\n        && check('mes-req', 'Measure', measures.length, options.min_measures, options.max_measures));\n};\nexports.handleErrors = handleErrors;\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/common/utils.ts?");

/***/ }),

/***/ "./src/visualizations/funnel_smooth.js":
/*!*********************************************!*\
  !*** ./src/visualizations/funnel_smooth.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"viz\": () => (/* binding */ viz)\n/* harmony export */ });\n/* harmony import */ var _common_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/utils */ \"./src/common/utils.ts\");\n/* harmony import */ var funnel_graph_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! funnel-graph-js */ \"./node_modules/funnel-graph-js/index.js\");\n/* harmony import */ var funnel_graph_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(funnel_graph_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css/main.css */ \"./src/visualizations/css/main.css\");\n/* harmony import */ var _css_themes_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./css/themes.css */ \"./src/visualizations/css/themes.css\");\n\n\n\n\n\n\nfunction loadFunnelGraphStyles() {\n  const cssUrls = [\n    \"https://unpkg.com/funnel-graph-js@1.3.9/dist/css/main.min.css\",\n    \"https://unpkg.com/funnel-graph-js@1.3.9/dist/css/theme.min.css\"\n  ];\n\n  cssUrls.forEach(url => {\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.type = 'text/css';\n    link.href = url;\n    document.head.appendChild(link);\n  });\n}\n\nfunction injectStyles(config) {\n  const styleId = 'my-visualization-styles'; // A unique identifier for your styles\n  let styleElement = document.getElementById(styleId);\n\n  if (!styleElement) {\n    styleElement = document.createElement('style');\n    styleElement.id = styleId;\n    document.head.appendChild(styleElement);\n  }\n\n  styleElement.innerHTML = `\n    .funnel-container {\n      background-color: ${config.background} !important;\n    }\n  `;\n}\n\nconst viz = looker.plugins.visualizations.add({\n  options: {\n    background: {\n      section: \"Styling\",\n      type: \"array\",\n      label: \"Background Color\",\n      display: \"color\",\n      default: [\"#353b49\"]\n    },\n    startColor: {\n      section: \"Styling\",\n      type: \"array\",\n      label: \"Starting Color\",\n      display: \"color\",\n      default: [\"#22ff22\"]\n    },\n    endColor: {\n      section: \"Styling\",\n      type: \"array\",\n      label: \"Ending Color\",\n      display: \"color\",\n      default: [\"#ff2222\"]\n    },\n      direction: {\n        section: \"Styling\",\n        type: \"string\",\n        label: \"Direction\",\n        display: \"select\",\n        values: [\n          {\"Vertical\": \"vertical\"},\n          {\"Horizontal\": \"horizontal\"}\n        ],\n        default: \"horizontal\"\n      },\n  },\n  create: function (element, config) {\n    element.innerHTML = `<svg class=\"funnel\" width=\"${element.offsetWidth}\" height=\"${element.offsetHeight}\" stroke-width=\"3\"></svg>`;\n  },\n  updateAsync: function (data, element, config, queryResponse, details, doneRendering) {\n\n    element.innerHTML = `\n    <style>\n    body {\n      background-color: ${config.background};\n    }\n    </style>`\n    // Call this function at an appropriate time (e.g., when initializing your app or component)\n    loadFunnelGraphStyles();\n\n    // Handle the field counts\n    const errors = (0,_common_utils__WEBPACK_IMPORTED_MODULE_0__.handleErrors)(this, queryResponse, {\n      max_pivots: 0,\n      min_dimensions: 0,\n      max_dimensions: 1,\n      min_measures: 2,\n      max_measures: 10\n    });\n\n    let measures = queryResponse.fields.measure_like\n    let options = this.options;\n\n    // make an option for labeling each measure\n    measures.forEach((measure) => {\n      options[measure.name] =\n      {\n        section: \"Labels\",\n        type: \"string\",\n        label: `Label for '${measure.label}'`,\n        default: measure.label\n      }\n    })\n    \n    this.trigger('registerOptions', options) // register options with parent page to update visConfig\n\n// Example call for funnel-graph-js library:\nelement.classList.add('funnel-container');\n\nconst labels = measures.map((measure) => {\n  console.log(measure)\n  return config[measure.name];\n})\nconsole.log('labels:',labels)\nlet subLabels = [];\nlet values = [];\nconst hasADimension = queryResponse.fields.dimension_like.length > 0;\nif (hasADimension) {\n  const dimension = queryResponse.fields.dimension_like[0];\n  subLabels = data.map((row) => row[dimension.name].value);\n  values = data.map((row) => {\n    return measures.map((measure) => {\n      return row[measure.name].value;\n  })\n  })\n} else {\n  values = measures.map((measure) => {\n      return data[0][measure.name].value;\n  })\n  }\n\n  let graph;\nif (hasADimension) {\ngraph = new (funnel_graph_js__WEBPACK_IMPORTED_MODULE_1___default())({\n    container: '.funnel-container',\n    data: {\n      subLabels: subLabels,\n      labels: labels,\n      colors: ['orange','blue'],\n      values: values\n  },\n    displayPercent: true,\n    direction: config.direction,\n    gradientDirection: config.direction,\n});\n} else {\n  graph = new (funnel_graph_js__WEBPACK_IMPORTED_MODULE_1___default())({\n    container: '.funnel-container',\n    data: {\n      labels: labels,\n      colors: [config.startColor, config.endColor],\n      values: values\n  },\n    displayPercent: true,\n    direction: config.direction,\n    gradientDirection: config.direction,\n});\n}\nconsole.log(graph)\ngraph.draw();\n\n    // element.innerHTML = \"Hello World\"\n    doneRendering()\n  }\n});\n\n//# sourceURL=webpack://%5Bname%5D/./src/visualizations/funnel_smooth.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/visualizations/funnel_smooth.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});